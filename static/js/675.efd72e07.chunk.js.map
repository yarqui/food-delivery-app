{"version":3,"file":"static/js/675.efd72e07.chunk.js","mappings":"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","sources":["components/DishItem/DishItem.styled.js","screens/CartScreen/CartScreen.styled.js","components/CartItem/CartItem.js","screens/CartScreen/CartScreen.js","utils/localStorageOperations.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 270px;\n  padding: 8px;\n  gap: 8px;\n\n  list-style: none;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import styled from 'styled-components';\n\nexport const CartWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-radius: 4px;\n  padding: 16px;\n  /* background-color: #fff2f2; */\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const CartItemsWrap = styled.div`\n  margin-left: 16px;\n  flex-grow: 2;\n`;\n\nexport const QuantityWrap = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const TotalTitle = styled.h3`\n  margin-right: 0;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 300px;\n`;\n","import { Item } from 'components/DishItem/DishItem.styled';\nimport { QuantityWrap } from 'screens/CartScreen/CartScreen.styled';\nimport PropTypes from 'prop-types';\n\nconst CartItem = ({ dish, handleQuantityChange, handleRemoveFromCart }) => {\n  const { dishId, photo, name, price, quantity } = dish;\n\n  const onQuantityChange = e => {\n    const quantity = parseInt(e.target.value, 10);\n    handleQuantityChange(dishId, quantity);\n  };\n\n  return (\n    <Item>\n      <img src={photo} alt={name} width=\"200\" />\n      <p>{name}</p>\n      <p>Price: ${price}</p>\n      <QuantityWrap>\n        <p>Quantity:</p>\n        <input\n          type=\"number\"\n          min={1}\n          value={quantity}\n          onChange={onQuantityChange}\n        />\n      </QuantityWrap>\n      <button\n        onClick={() => {\n          handleRemoveFromCart(dishId);\n        }}\n      >\n        Remove\n      </button>\n    </Item>\n  );\n};\n\nCartItem.propTypes = {\n  dish: PropTypes.object.isRequired,\n  handleQuantityChange: PropTypes.func.isRequired,\n  handleRemoveFromCart: PropTypes.func.isRequired,\n};\n\nexport default CartItem;\n","import CartItem from 'components/CartItem/CartItem';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport { submitOrderToServer } from 'utils/firebaseOperations';\nimport localStorageNames from 'utils/localStorageNames';\nimport {\n  loadFromLocalStorage,\n  removeFromLocalStorage,\n  saveToLocalStorage,\n} from 'utils/localStorageOperations';\nimport { CartWrap, Form, CartItemsWrap, TotalTitle } from './CartScreen.styled';\n\nconst initialUserCredentials = {\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n};\n\nconst CartScreen = ({ cartItems, setCartItems }) => {\n  const [userCredentials, setUserCredentials] = useState(\n    () =>\n      loadFromLocalStorage(localStorageNames.cartCredentials) ??\n      initialUserCredentials\n  );\n\n  useEffect(() => {\n    saveToLocalStorage(localStorageNames.cartCredentials, userCredentials);\n  }, [userCredentials]);\n\n  const navigate = useNavigate();\n\n  const totalSum = cartItems.reduce(\n    (sum, { price, quantity }) => sum + price * quantity,\n    0\n  );\n\n  const resetForm = () => {\n    removeFromLocalStorage(localStorageNames.cartCredentials);\n    setUserCredentials(initialUserCredentials);\n    setCartItems([]);\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    setUserCredentials(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleRemoveFromCart = productId => {\n    const updatedItems = cartItems.filter(dish => dish.dishId !== productId);\n    setCartItems(updatedItems);\n  };\n\n  const handleQuantityChange = (productId, quantity) => {\n    const updatedItems = cartItems.map(dish => {\n      if (dish.dishId === productId) {\n        return { ...dish, quantity };\n      }\n\n      return dish;\n    });\n    setCartItems(updatedItems);\n  };\n\n  const handleOrderSubmit = async e => {\n    e.preventDefault();\n    const { name, email, phone, address } = userCredentials;\n\n    if (cartItems.length === 0) {\n      toast.warning('No items in the cart. Please choose something to eat.', {\n        autoClose: 2000,\n      });\n      navigate('/', { replace: true });\n      return;\n    }\n\n    if (!name || !email || !phone || !address) {\n      toast.warning('All fields are required', {\n        autoClose: 1000,\n      });\n      return;\n    }\n\n    const order = {\n      products: cartItems,\n      sum: totalSum,\n      name: name.trim(),\n      email: email.trim().toLocaleLowerCase(),\n      phone: phone.trim(),\n      address: address.trim(),\n    };\n\n    await submitOrderToServer(order);\n\n    toast.success(\n      `Thank you for your order. Our delivery guy will be there in a jiffy 🚀`,\n      {\n        autoClose: 10000,\n        position: 'top-center',\n      }\n    );\n    resetForm();\n    navigate('/', { replace: true });\n  };\n\n  return (\n    <>\n      <CartWrap>\n        <div>\n          <h3>Delivery Details:</h3>\n          <Form onSubmit={handleOrderSubmit}>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Bruce Wayne, Tomas Shelby.\"\n              placeholder=\"Name\"\n              value={userCredentials.name}\n              onChange={handleInputChange}\n            />\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\n              // title=\"Please enter the valid email\"\n              placeholder=\"Email\"\n              value={userCredentials.email}\n              onChange={handleInputChange}\n            />\n            <label htmlFor=\"phone\">Phone</label>\n            <input\n              id=\"phone\"\n              type=\"tel\"\n              name=\"phone\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              placeholder=\"Phone\"\n              value={userCredentials.phone}\n              onChange={handleInputChange}\n            />\n            <label htmlFor=\"address\">Address</label>\n            <input\n              id=\"address\"\n              type=\"text\"\n              name=\"address\"\n              placeholder=\"Address\"\n              value={userCredentials.address}\n              onChange={handleInputChange}\n            />\n\n            <button type=\"submit\">Submit Order</button>\n          </Form>\n        </div>\n\n        <CartItemsWrap>\n          <TotalTitle>Total: ${totalSum}</TotalTitle>\n          {cartItems.map(dish => (\n            <CartItem\n              key={dish.dishId}\n              dish={dish}\n              handleQuantityChange={handleQuantityChange}\n              handleRemoveFromCart={handleRemoveFromCart}\n            />\n          ))}\n        </CartItemsWrap>\n      </CartWrap>\n      <ToastContainer theme=\"colored\" autoClose={700} position=\"top-center\" />\n    </>\n  );\n};\n\nCartScreen.propTypes = {\n  cartItems: PropTypes.array.isRequired,\n  setCartItems: PropTypes.func.isRequired,\n};\nexport default CartScreen;\n","export const saveToLocalStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    console.log('error:', error);\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const loadFromLocalStorage = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    console.log('error:', error);\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const removeFromLocalStorage = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('error:', error);\n    console.log('error.message:', error.message);\n  }\n};\n"],"names":["Item","styled","CartWrap","CartItemsWrap","QuantityWrap","TotalTitle","Form","dish","handleQuantityChange","handleRemoveFromCart","dishId","photo","name","price","quantity","src","alt","width","type","min","value","onChange","e","parseInt","target","onClick","initialUserCredentials","email","phone","address","cartItems","setCartItems","useState","key","JSON","parse","localStorage","getItem","error","console","log","message","loadFromLocalStorage","localStorageNames","userCredentials","setUserCredentials","useEffect","setItem","stringify","saveToLocalStorage","navigate","useNavigate","totalSum","reduce","sum","resetForm","removeItem","removeFromLocalStorage","handleInputChange","currentTarget","prevState","productId","updatedItems","filter","map","handleOrderSubmit","preventDefault","length","toast","autoClose","replace","order","products","trim","toLocaleLowerCase","submitOrderToServer","position","onSubmit","htmlFor","id","pattern","title","placeholder","theme"],"sourceRoot":""}