{"version":3,"file":"static/js/543.8727a01a.chunk.js","mappings":"0JAAO,IAAMA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,IAAV,C,2GCAlBC,EAAa,SAAAF,GAAK,OAAIA,EAAMG,IAAV,E,kBCkF/B,EA5EmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACXF,GAAOG,EAAAA,EAAAA,IAAYJ,GACnBD,GAAOK,EAAAA,EAAAA,IAAYP,EAAAA,GAEzB,GAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAuBA,OACE,4BACE,wBAAI,wBACJ,wBAAI,UACHV,EAAKW,KAAI,SAAAC,GAAO,OACf,4BACE,uBAAIA,EAAQC,QACZ,yBAAG,WAASD,EAAQE,UACpB,yBAAG,aAAWF,EAAQG,aACtB,mBAAQC,QAAS,kBA9BIC,EA8BuBL,EAAQM,QA7B1DjB,GAASkB,EAAAA,EAAAA,IAAe,CAAEF,UAAAA,KADC,IAAAA,CA8BJ,EAAjB,SAAyD,YAGzD,kBACEG,KAAK,SACLC,IAAI,IACJC,MAAOV,EAAQG,SACfQ,SAAU,SAAAC,GAAC,OAjCSP,EAiCgBL,EAAQM,GAjCbH,EAiCiBS,EAAEC,OAAOH,WAhCjErB,GAASyB,EAAAA,EAAAA,IAAmB,CAAET,UAAAA,EAAWF,SAAAA,KADd,IAACE,EAAWF,CAiCpB,MAXLH,EAAQM,GADH,KAiBjB,wBAAI,oBACJ,kBACEE,KAAK,QACLO,YAAY,QACZL,MAAOjB,EACPkB,SAAU,SAAAC,GAAC,OAAIlB,EAASkB,EAAEC,OAAOH,MAAtB,KAEb,kBACEF,KAAK,OACLO,YAAY,QACZL,MAAOf,EACPgB,SAAU,SAAAC,GAAC,OAAIhB,EAASgB,EAAEC,OAAOH,MAAtB,KAEb,kBACEF,KAAK,OACLO,YAAY,UACZL,MAAOb,EACPc,SAAU,SAAAC,GAAC,OAAId,EAAWc,EAAEC,OAAOH,MAAxB,KAGb,mBAAQN,QAtDc,WACxB,IAAMY,EAAQ,CACZ9B,KAAAA,EACA+B,SAAU7B,EACVK,MAAAA,EACAE,MAAAA,EACAE,QAAAA,GAGFqB,QAAQC,IAAIH,EAEb,EA2CG,SAAoC,mBAGzC,C","sources":["redux/shop/shopSelectors.js","redux/cart/cartSelectors.js","screens/CartScreen/CartScreen.js"],"sourcesContent":["export const selectShop = state => state.shop;\n","export const selectCart = state => state.cart;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectShop } from 'redux/shop/shopSelectors';\nimport { selectCart } from 'redux/cart/cartSelectors';\nimport { removeFromCart, updateCartQuantity } from 'redux/cart/cartSlice';\n\nconst CartScreen = () => {\n  const dispatch = useDispatch();\n  const cart = useSelector(selectCart);\n  const shop = useSelector(selectShop);\n\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n\n  const handleRemoveFromCart = productId => {\n    dispatch(removeFromCart({ productId }));\n  };\n\n  const handleQuantityChange = (productId, quantity) => {\n    dispatch(updateCartQuantity({ productId, quantity }));\n  };\n\n  const handleOrderSubmit = () => {\n    const order = {\n      shop,\n      products: cart,\n      email,\n      phone,\n      address,\n    };\n\n    console.log(order);\n    // TODO: Save the order to the Firebase database\n  };\n\n  return (\n    <div>\n      <h2>Shopping Cart Page</h2>\n      <h3>Cart:</h3>\n      {cart.map(product => (\n        <div key={product.id}>\n          <p>{product.name}</p>\n          <p>Price: ${product.price}</p>\n          <p>Quantity: {product.quantity}</p>\n          <button onClick={() => handleRemoveFromCart(product.id)}>\n            Remove\n          </button>\n          <input\n            type=\"number\"\n            min=\"1\"\n            value={product.quantity}\n            onChange={e => handleQuantityChange(product.id, e.target.value)}\n          />\n        </div>\n      ))}\n\n      <h3>Order Details:</h3>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Phone\"\n        value={phone}\n        onChange={e => setPhone(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Address\"\n        value={address}\n        onChange={e => setAddress(e.target.value)}\n      />\n\n      <button onClick={handleOrderSubmit}>Submit Order</button>\n    </div>\n  );\n};\n\nexport default CartScreen;\n"],"names":["selectShop","state","shop","selectCart","cart","dispatch","useDispatch","useSelector","useState","email","setEmail","phone","setPhone","address","setAddress","map","product","name","price","quantity","onClick","productId","id","removeFromCart","type","min","value","onChange","e","target","updateCartQuantity","placeholder","order","products","console","log"],"sourceRoot":""}